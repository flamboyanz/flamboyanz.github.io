{"version":3,"sources":["../../../src/trips-layer/trips-layer.js"],"names":["defaultProps","trailLength","currentTime","getPath","d","path","getColor","color","TripsLayer","gl","context","attributeManager","getAttributeManager","model","getModel","add","indices","size","update","calculateIndices","isIndexed","positions","calculatePositions","colors","accessor","calculateColors","getExtension","setState","props","dataChanged","changeFlags","countVertices","data","state","invalidateAll","Model","id","vs","tripsVertex","fs","tripsFragment","geometry","Geometry","drawMode","vertexCount","onBeforeRender","enable","BLEND","POLYGON_OFFSET_FILL","polygonOffset","blendFunc","SRC_ALPHA","ONE","blendEquation","FUNC_ADD","onAfterRender","ONE_MINUS_SRC_ALPHA","disable","pathLengths","reduce","acc","l","length","uniforms","render","Object","assign","attribute","indicesCount","Uint32Array","offset","index","i","j","value","setVertexCount","Float32Array","pt","Layer","layerName"],"mappings":"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","sourcesContent":["import {Layer} from '@deck.gl/core';\n\nimport {Model, Geometry} from 'luma.gl';\n\nimport tripsVertex from './trips-layer-vertex.glsl';\nimport tripsFragment from './trips-layer-fragment.glsl';\n\nconst defaultProps = {\n  trailLength: 120,\n  currentTime: 0,\n  getPath: d => d.path,\n  getColor: d => d.color\n};\n\nexport default class TripsLayer extends Layer {\n  initializeState() {\n    const {gl} = this.context;\n    const attributeManager = this.getAttributeManager();\n\n    const model = this.getModel(gl);\n\n    attributeManager.add({\n      indices: {size: 1, update: this.calculateIndices, isIndexed: true},\n      positions: {size: 3, update: this.calculatePositions},\n      colors: {size: 3, accessor: 'getColor', update: this.calculateColors}\n    });\n\n    gl.getExtension('OES_element_index_uint');\n    this.setState({model});\n  }\n\n  updateState({props, changeFlags: {dataChanged}}) {\n    if (dataChanged) {\n      this.countVertices(props.data);\n      this.state.attributeManager.invalidateAll();\n    }\n  }\n\n  getModel(gl) {\n    return new Model(gl, {\n      id: this.props.id,\n      vs: tripsVertex,\n      fs: tripsFragment,\n      geometry: new Geometry({\n        id: this.props.id,\n        drawMode: 'LINES'\n      }),\n      vertexCount: 0,\n      isIndexed: true,\n      // TODO-state-management: onBeforeRender can go to settings, onAfterRender, we should\n      // move this settings of corresponding draw.\n      onBeforeRender: () => {\n        gl.enable(gl.BLEND);\n        gl.enable(gl.POLYGON_OFFSET_FILL);\n        gl.polygonOffset(2.0, 1.0);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n        gl.blendEquation(gl.FUNC_ADD);\n      },\n      onAfterRender: () => {\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.disable(gl.POLYGON_OFFSET_FILL);\n      }\n    });\n  }\n\n  countVertices(data) {\n    if (!data) {\n      return;\n    }\n\n    const {getPath} = this.props;\n    let vertexCount = 0;\n    const pathLengths = data.reduce((acc, d) => {\n      const l = getPath(d).length;\n      vertexCount += l;\n      return [...acc, l];\n    }, []);\n    this.setState({pathLengths, vertexCount});\n  }\n\n  draw({uniforms}) {\n    const {trailLength, currentTime} = this.props;\n    this.state.model.render(\n      Object.assign({}, uniforms, {\n        trailLength,\n        currentTime\n      })\n    );\n  }\n\n  calculateIndices(attribute) {\n    const {pathLengths, vertexCount} = this.state;\n\n    const indicesCount = (vertexCount - pathLengths.length) * 2;\n    const indices = new Uint32Array(indicesCount);\n\n    let offset = 0;\n    let index = 0;\n    for (let i = 0; i < pathLengths.length; i++) {\n      const l = pathLengths[i];\n      indices[index++] = offset;\n      for (let j = 1; j < l - 1; j++) {\n        indices[index++] = j + offset;\n        indices[index++] = j + offset;\n      }\n      indices[index++] = offset + l - 1;\n      offset += l;\n    }\n    attribute.value = indices;\n    this.state.model.setVertexCount(indicesCount);\n  }\n\n  calculatePositions(attribute) {\n    const {data, getPath} = this.props;\n    const {vertexCount} = this.state;\n    const positions = new Float32Array(vertexCount * 3);\n\n    let index = 0;\n    for (let i = 0; i < data.length; i++) {\n      const path = getPath(data[i]);\n      for (let j = 0; j < path.length; j++) {\n        const pt = path[j];\n        positions[index++] = pt[0];\n        positions[index++] = pt[1];\n        positions[index++] = pt[2];\n      }\n    }\n    attribute.value = positions;\n  }\n\n  calculateColors(attribute) {\n    const {data, getColor} = this.props;\n    const {pathLengths, vertexCount} = this.state;\n    const colors = new Float32Array(vertexCount * 3);\n\n    let index = 0;\n    for (let i = 0; i < data.length; i++) {\n      const color = getColor(data[i]);\n      const l = pathLengths[i];\n      for (let j = 0; j < l; j++) {\n        colors[index++] = color[0];\n        colors[index++] = color[1];\n        colors[index++] = color[2];\n      }\n    }\n    attribute.value = colors;\n  }\n}\n\nTripsLayer.layerName = 'TripsLayer';\nTripsLayer.defaultProps = defaultProps;\n"],"file":"trips-layer.js"}