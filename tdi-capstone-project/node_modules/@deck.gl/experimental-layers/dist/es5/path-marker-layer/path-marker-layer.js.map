{"version":3,"sources":["../../../src/path-marker-layer/path-marker-layer.js"],"names":["DISTANCE_FOR_MULTI_ARROWS","ARROW_HEAD_SIZE","ARROW_TAIL_WIDTH","DEFAULT_MARKER_LAYER","MeshLayer","DEFAULT_MARKER_LAYER_PROPS","mesh","Arrow2DGeometry","headSize","tailWidth","defaultProps","Object","assign","PathOutlineLayer","MarkerLayer","markerLayerProps","sizeScale","fp64","hightlightIndex","highlightPoint","getPath","x","path","getColor","color","getMarkerColor","getDirection","direction","getMarkerPercentages","object","lineLength","PathMarkerLayer","state","markers","closestPoint","xyz","viewport","coordinateSystem","coordinateOrigin","COORDINATE_SYSTEM","METER_OFFSETS","metersToLngLatDelta","dx","dy","y","projectFlat","LNGLAT_OFFSETS","props","oldProps","changeFlags","dataChanged","updateTriggersChanged","data","context","o","_recalculateClosestPoint","propsChanged","point","highlightIndex","points","p","closestPoints","position","info","getSubLayerProps","id","pickable","parameters","blend","depthTest","ScatterplotLayer","CompositeLayer","layerName"],"mappings":"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","sourcesContent":["import {CompositeLayer, COORDINATE_SYSTEM} from '@deck.gl/core';\nimport {ScatterplotLayer} from '@deck.gl/layers';\nimport PathOutlineLayer from '../path-outline-layer/path-outline-layer';\nimport MeshLayer from '../mesh-layer/mesh-layer';\nimport Arrow2DGeometry from './arrow-2d-geometry';\n\nimport createPathMarkers from './create-path-markers';\nimport {getClosestPointOnPolyline} from './polyline';\n\nconst DISTANCE_FOR_MULTI_ARROWS = 0.1;\nconst ARROW_HEAD_SIZE = 0.2;\nconst ARROW_TAIL_WIDTH = 0.05;\n// const ARROW_CENTER_ADJUST = -0.8;\n\nconst DEFAULT_MARKER_LAYER = MeshLayer;\n\nconst DEFAULT_MARKER_LAYER_PROPS = {\n  mesh: new Arrow2DGeometry({headSize: ARROW_HEAD_SIZE, tailWidth: ARROW_TAIL_WIDTH})\n};\n\nconst defaultProps = Object.assign({}, PathOutlineLayer.defaultProps, {\n  MarkerLayer: DEFAULT_MARKER_LAYER,\n  markerLayerProps: DEFAULT_MARKER_LAYER_PROPS,\n\n  sizeScale: 100,\n  fp64: false,\n\n  hightlightIndex: -1,\n  highlightPoint: null,\n\n  getPath: x => x.path,\n  getColor: x => x.color,\n  getMarkerColor: x => [0, 0, 0, 255],\n  getDirection: x => x.direction,\n  getMarkerPercentages: (object, {lineLength}) =>\n    lineLength > DISTANCE_FOR_MULTI_ARROWS ? [0.25, 0.5, 0.75] : [0.5]\n});\n\nexport default class PathMarkerLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      markers: [],\n      mesh: new Arrow2DGeometry({headSize: ARROW_HEAD_SIZE, tailWidth: ARROW_TAIL_WIDTH}),\n      closestPoint: null\n    };\n  }\n\n  projectFlat(xyz, viewport, coordinateSystem, coordinateOrigin) {\n    if (coordinateSystem === COORDINATE_SYSTEM.METER_OFFSETS) {\n      const [dx, dy] = viewport.metersToLngLatDelta(xyz);\n      const [x, y] = coordinateOrigin;\n      return viewport.projectFlat([x + dx, dy + y]);\n    } else if (coordinateSystem === COORDINATE_SYSTEM.LNGLAT_OFFSETS) {\n      const [dx, dy] = xyz;\n      const [x, y] = coordinateOrigin;\n      return viewport.projectFlat([x + dx, dy + y]);\n    }\n\n    return viewport.projectFlat(xyz);\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    if (changeFlags.dataChanged || changeFlags.updateTriggersChanged) {\n      const {\n        data,\n        getPath,\n        getDirection,\n        getMarkerColor,\n        getMarkerPercentages,\n        coordinateSystem,\n        coordinateOrigin\n      } = this.props;\n      const {viewport} = this.context;\n      const projectFlat = o => this.projectFlat(o, viewport, coordinateSystem, coordinateOrigin);\n      this.state.markers = createPathMarkers({\n        data,\n        getPath,\n        getDirection,\n        getColor: getMarkerColor,\n        getMarkerPercentages,\n        projectFlat\n      });\n      this._recalculateClosestPoint();\n    }\n    if (changeFlags.propsChanged) {\n      if (props.point !== oldProps.point) {\n        this._recalculateClosestPoint();\n      }\n    }\n  }\n\n  _recalculateClosestPoint() {\n    const {highlightPoint, highlightIndex} = this.props;\n    if (highlightPoint && highlightIndex >= 0) {\n      const object = this.props.data[highlightIndex];\n      const points = this.props.getPath(object);\n      const {point} = getClosestPointOnPolyline({points, p: highlightPoint});\n      this.state.closestPoints = [\n        {\n          position: point\n        }\n      ];\n    } else {\n      this.state.closestPoints = [];\n    }\n  }\n\n  getPickingInfo({info}) {\n    return Object.assign(info, {\n      // override object with picked feature\n      object: (info.object && info.object.path) || info.object\n    });\n  }\n\n  renderLayers() {\n    return [\n      new PathOutlineLayer(\n        this.props,\n        this.getSubLayerProps({\n          id: 'paths',\n          // Note: data has to be passed explicitly like this to avoid being empty\n          data: this.props.data\n        })\n      ),\n      new this.props.MarkerLayer(\n        this.getSubLayerProps(\n          Object.assign({}, this.props.markerLayerProps, {\n            id: 'markers',\n            data: this.state.markers,\n            sizeScale: this.props.sizeScale,\n            fp64: this.props.fp64,\n            pickable: false,\n            parameters: {\n              blend: false,\n              depthTest: false\n            }\n          })\n        )\n      ),\n      this.state.closestPoints &&\n        new ScatterplotLayer({\n          id: `${this.props.id}-highlight`,\n          data: this.state.closestPoints,\n          fp64: this.props.fp64\n        })\n    ];\n  }\n}\n\nPathMarkerLayer.layerName = 'PathMarkerLayer';\nPathMarkerLayer.defaultProps = defaultProps;\n"],"file":"path-marker-layer.js"}