{"version":3,"sources":["../../../src/path-marker-layer/polyline.js"],"names":["getClosestPointOnLine","p","p1","p2","clampToLine","lineVector","Vector3","subtract","pointVector","dotProduct","dot","lerp","getClosestPointOnPolyline","points","pClosest","distanceSquared","Infinity","index","i","length","pClosestOnLine","distanceToLineSquared","point","distance","Math","sqrt"],"mappings":";;;;;;;;AAAA;;AAEA;AACO,SAASA,qBAAT,OAAgE;AAAA,MAAhCC,CAAgC,QAAhCA,CAAgC;AAAA,MAA7BC,EAA6B,QAA7BA,EAA6B;AAAA,MAAzBC,EAAyB,QAAzBA,EAAyB;AAAA,8BAArBC,WAAqB;AAAA,MAArBA,WAAqB,iCAAP,IAAO;AACrE,MAAMC,UAAU,GAAG,IAAIC,aAAJ,CAAYH,EAAZ,EAAgBI,QAAhB,CAAyBL,EAAzB,CAAnB;AACA,MAAMM,WAAW,GAAG,IAAIF,aAAJ,CAAYL,CAAZ,EAAeM,QAAf,CAAwBL,EAAxB,CAApB;AACA,MAAIO,UAAU,GAAGJ,UAAU,CAACK,GAAX,CAAeF,WAAf,CAAjB;;AACA,MAAIJ,WAAJ,EAAiB;AACfK,IAAAA,UAAU,GAAG,iBAAMA,UAAN,EAAkB,CAAlB,EAAqB,CAArB,CAAb;AACD;;AACD,SAAOJ,UAAU,CAACM,IAAX,CAAgBF,UAAhB,CAAP;AACD,C,CAED;;;AACO,SAASG,yBAAT,QAAgD;AAAA,MAAZX,CAAY,SAAZA,CAAY;AAAA,MAATY,MAAS,SAATA,MAAS;AACrDZ,EAAAA,CAAC,GAAG,IAAIK,aAAJ,CAAYL,CAAZ,CAAJ;AACA,MAAIa,QAAQ,GAAG,IAAf;AACA,MAAIC,eAAe,GAAGC,QAAtB;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,MAAM,CAACM,MAAP,GAAgB,CAApC,EAAuC,EAAED,CAAzC,EAA4C;AAC1C,QAAMhB,EAAE,GAAGW,MAAM,CAACK,CAAD,CAAjB;AACA,QAAMf,EAAE,GAAGU,MAAM,CAACK,CAAC,GAAG,CAAL,CAAjB;AACA,QAAME,cAAc,GAAGpB,qBAAqB,CAAC;AAACC,MAAAA,CAAC,EAADA,CAAD;AAAIC,MAAAA,EAAE,EAAFA,EAAJ;AAAQC,MAAAA,EAAE,EAAFA;AAAR,KAAD,CAA5C;AACA,QAAMkB,qBAAqB,GAAGpB,CAAC,CAACc,eAAF,CAAkBK,cAAlB,CAA9B;;AACA,QAAIC,qBAAqB,GAAGN,eAA5B,EAA6C;AAC3CA,MAAAA,eAAe,GAAGM,qBAAlB;AACAP,MAAAA,QAAQ,GAAGM,cAAX;AACAH,MAAAA,KAAK,GAAGC,CAAR;AACD;AACF;;AACD,SAAO;AACLI,IAAAA,KAAK,EAAER,QADF;AAELG,IAAAA,KAAK,EAALA,KAFK;AAGLf,IAAAA,EAAE,EAAEW,MAAM,CAACI,KAAD,CAHL;AAILd,IAAAA,EAAE,EAAEU,MAAM,CAACI,KAAK,GAAG,CAAT,CAJL;AAKLF,IAAAA,eAAe,EAAfA,eALK;AAMLQ,IAAAA,QAAQ,EAAEC,IAAI,CAACC,IAAL,CAAUV,eAAV;AANL,GAAP;AAQD","sourcesContent":["import {Vector3, clamp} from 'math.gl';\n\n// Return the closest point on a line segment\nexport function getClosestPointOnLine({p, p1, p2, clampToLine = true}) {\n  const lineVector = new Vector3(p2).subtract(p1);\n  const pointVector = new Vector3(p).subtract(p1);\n  let dotProduct = lineVector.dot(pointVector);\n  if (clampToLine) {\n    dotProduct = clamp(dotProduct, 0, 1);\n  }\n  return lineVector.lerp(dotProduct);\n}\n\n// Return the closest point on a line segment\nexport function getClosestPointOnPolyline({p, points}) {\n  p = new Vector3(p);\n  let pClosest = null;\n  let distanceSquared = Infinity;\n  let index = -1;\n  for (let i = 0; i < points.length - 1; ++i) {\n    const p1 = points[i];\n    const p2 = points[i + 1];\n    const pClosestOnLine = getClosestPointOnLine({p, p1, p2});\n    const distanceToLineSquared = p.distanceSquared(pClosestOnLine);\n    if (distanceToLineSquared < distanceSquared) {\n      distanceSquared = distanceToLineSquared;\n      pClosest = pClosestOnLine;\n      index = i;\n    }\n  }\n  return {\n    point: pClosest,\n    index,\n    p1: points[index],\n    p2: points[index + 1],\n    distanceSquared,\n    distance: Math.sqrt(distanceSquared)\n  };\n}\n"],"file":"polyline.js"}