{"version":3,"sources":["../../../src/tile-layer/tile-layer.js"],"names":["defaultProps","renderSubLayers","props","GeoJsonLayer","getTileData","x","y","z","Promise","resolve","onDataLoaded","onGetTileDataError","err","console","error","maxZoom","minZoom","maxCacheSize","TileLayer","state","tiles","tileCache","TileCache","isLoaded","changeFlags","somethingChanged","oldProps","context","updateTriggersChanged","all","finalize","setState","maxSize","viewportChanged","viewport","getLayerZoomLevel","id","update","currTiles","filter","tile","allCurrTilesLoaded","every","map","data","then","_data","info","sourceLayer","Math","floor","zoom","parseInt","visible","geoProps","CompositeLayer","layerName"],"mappings":"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","sourcesContent":["import {GeoJsonLayer, CompositeLayer} from 'deck.gl';\nimport TileCache from './utils/tile-cache';\n\nconst defaultProps = {\n  renderSubLayers: props => new GeoJsonLayer(props),\n  getTileData: ({x, y, z}) => Promise.resolve(null),\n  onDataLoaded: () => {},\n  // eslint-disable-next-line\n  onGetTileDataError: err => console.error(err),\n  maxZoom: null,\n  minZoom: null,\n  maxCacheSize: null\n};\n\nexport default class TileLayer extends CompositeLayer {\n  initializeState() {\n    const {maxZoom, minZoom, getTileData, onGetTileDataError} = this.props;\n    this.state = {\n      tiles: [],\n      tileCache: new TileCache({getTileData, maxZoom, minZoom, onGetTileDataError}),\n      isLoaded: false\n    };\n  }\n\n  shouldUpdateState({changeFlags}) {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, oldProps, context, changeFlags}) {\n    const {onDataLoaded, onGetTileDataError} = props;\n    if (\n      changeFlags.updateTriggersChanged &&\n      (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getTileData)\n    ) {\n      const {getTileData, maxZoom, minZoom, maxCacheSize} = props;\n      this.state.tileCache.finalize();\n      this.setState({\n        tileCache: new TileCache({\n          getTileData,\n          maxSize: maxCacheSize,\n          maxZoom,\n          minZoom,\n          onGetTileDataError\n        })\n      });\n    }\n    if (changeFlags.viewportChanged) {\n      const {viewport} = context;\n      const z = this.getLayerZoomLevel();\n      if (viewport.id !== 'DEFAULT-INITIAL-VIEWPORT') {\n        this.state.tileCache.update(viewport, tiles => {\n          const currTiles = tiles.filter(tile => tile.z === z);\n          const allCurrTilesLoaded = currTiles.every(tile => tile.isLoaded);\n          this.setState({tiles, isLoaded: allCurrTilesLoaded});\n          if (!allCurrTilesLoaded) {\n            Promise.all(currTiles.map(tile => tile.data)).then(() => {\n              this.setState({isLoaded: true});\n              onDataLoaded(currTiles.filter(tile => tile._data).map(tile => tile._data));\n            });\n          } else {\n            onDataLoaded(currTiles.filter(tile => tile._data).map(tile => tile._data));\n          }\n        });\n      }\n    }\n  }\n\n  getPickingInfo({info, sourceLayer}) {\n    info.sourceLayer = sourceLayer;\n    info.tile = sourceLayer.props.tile;\n    return info;\n  }\n\n  getLayerZoomLevel() {\n    const z = Math.floor(this.context.viewport.zoom);\n    const {maxZoom, minZoom} = this.props;\n    if (maxZoom && parseInt(maxZoom, 10) === maxZoom && z > maxZoom) {\n      return maxZoom;\n    } else if (minZoom && parseInt(minZoom, 10) === minZoom && z < minZoom) {\n      return minZoom;\n    }\n    return z;\n  }\n\n  renderLayers() {\n    // eslint-disable-next-line no-unused-vars\n    const {getTileData, renderSubLayers, visible, ...geoProps} = this.props;\n    const z = this.getLayerZoomLevel();\n    return this.state.tiles.map(tile => {\n      return renderSubLayers({\n        ...geoProps,\n        id: `${this.id}-${tile.x}-${tile.y}-${tile.z}`,\n        data: tile.data,\n        visible: visible && (!this.state.isLoaded || tile.z === z),\n        tile\n      });\n    });\n  }\n}\n\nTileLayer.layerName = 'TileLayer';\nTileLayer.defaultProps = defaultProps;\n"],"file":"tile-layer.js"}