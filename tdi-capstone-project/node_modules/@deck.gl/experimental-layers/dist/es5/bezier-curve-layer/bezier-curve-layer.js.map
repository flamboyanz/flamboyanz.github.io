{"version":3,"sources":["../../../src/bezier-curve-layer/bezier-curve-layer.js"],"names":["fp64LowPart","fp64","NUM_SEGMENTS","DEFAULT_COLOR","defaultProps","strokeWidth","type","min","value","getSourcePosition","x","sourcePosition","getTargetPosition","targetPosition","getControlPoint","controlPoint","getColor","BezierCurveLayer","vs","fs","modules","attributeManager","state","addInstanced","instanceSourcePositions","size","transition","accessor","instanceTargetPositions","instanceControlPoints","instanceColors","GL","UNSIGNED_BYTE","defaultValue","props","oldProps","changeFlags","invalidateAll","gl","context","setState","model","_getModel","updateAttribute","uniforms","render","Object","assign","positions","i","concat","Model","getShaders","id","geometry","Geometry","drawMode","TRIANGLE_STRIP","attributes","Float32Array","isInstanced","shaderCache","setUniforms","numSegments","attribute","data","forEach","object","Layer","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer} from '@deck.gl/core';\nimport GL from 'luma.gl/constants';\nimport {Model, Geometry, fp64} from 'luma.gl';\nconst {fp64LowPart} = fp64;\n\nimport vs from './bezier-curve-layer-vertex.glsl';\nimport fs from './bezier-curve-layer-fragment.glsl';\n\nconst NUM_SEGMENTS = 40;\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  strokeWidth: {type: 'number', min: 0, value: 1},\n  fp64: false,\n  getSourcePosition: {type: 'accessor', value: x => x.sourcePosition},\n  getTargetPosition: {type: 'accessor', value: x => x.targetPosition},\n  getControlPoint: {type: 'accessor', value: x => x.controlPoint},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR}\n};\n\nexport default class BezierCurveLayer extends Layer {\n  getShaders() {\n    return {vs, fs, modules: ['picking']};\n  }\n\n  initializeState() {\n    const {attributeManager} = this.state;\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceSourcePositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getSourcePosition'\n      },\n      instanceTargetPositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getTargetPosition'\n      },\n      instanceControlPoints: {\n        size: 3,\n        transition: false,\n        accessor: 'getControlPoint'\n      },\n      instanceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: [0, 0, 0, 255]\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateAttribute({props, oldProps, changeFlags}) {\n    if (props.fp64 !== oldProps.fp64) {\n      const {attributeManager} = this.state;\n      attributeManager.invalidateAll();\n    }\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      this.setState({model: this._getModel(gl)});\n    }\n    this.updateAttribute({props, oldProps, changeFlags});\n  }\n\n  draw({uniforms}) {\n    const {strokeWidth} = this.props;\n\n    this.state.model.render(\n      Object.assign({}, uniforms, {\n        strokeWidth\n      })\n    );\n  }\n\n  _getModel(gl) {\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    let positions = [];\n    for (let i = 0; i <= NUM_SEGMENTS; i++) {\n      positions = positions.concat([i, -1, 0, i, 1, 0]);\n    }\n\n    const model = new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_STRIP,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n    model.setUniforms({numSegments: NUM_SEGMENTS});\n    return model;\n  }\n\n  calculateInstanceSourceTargetPositions64xyLow(attribute) {\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    data.forEach(object => {\n      const sourcePosition = getSourcePosition(object);\n      const targetPosition = getTargetPosition(object);\n      value[i + 0] = fp64LowPart(sourcePosition[0]);\n      value[i + 1] = fp64LowPart(sourcePosition[1]);\n      value[i + 2] = fp64LowPart(targetPosition[0]);\n      value[i + 3] = fp64LowPart(targetPosition[1]);\n      i += size;\n    });\n  }\n}\n\nBezierCurveLayer.layerName = 'BezierCurveLayer';\nBezierCurveLayer.defaultProps = defaultProps;\n"],"file":"bezier-curve-layer.js"}