{"version":3,"sources":["../../../../src/shaderlib/utils/utils.js"],"names":["INITIAL_STATE","getUniforms","vs","fs","name"],"mappings":";;;;;;;;;AAAA;;AAEA;AACA,IAAMA,aAAa,GAAG,EAAtB;;AAEA,SAASC,WAAT,GAAyC;AAAA,iFAAfD,aAAe;;AAAA;AAAE;;AAE3C,IAAME,EAAE,kiBAAR;AAkBA,IAAMC,EAAE,GAAGD,EAAX;eAEe;AACbE,EAAAA,IAAI,EAAE,SADO;AAEbF,EAAAA,EAAE,EAAFA,EAFa;AAGbC,EAAAA,EAAE,EAAFA,EAHa;AAIbF,EAAAA,WAAW,EAAXA;AAJa,C","sourcesContent":["// TODO - this module is a WIP\n\n/* eslint-disable camelcase */\nconst INITIAL_STATE = {};\n\nfunction getUniforms({} = INITIAL_STATE) {}\n\nconst vs = `\\\n// Note - fairly generic, move to a UV or screen package, or even project?\nvec2 project_clipspace_to_uv(vec4 position) {\n  vec2 p = vec2(position.x / position.w, position.y / position.w);\n  return vec2((p.x + 1.0) / 2.0, (p.y + 1.0) / 2.0);\n}\n\nvec2 project_clipspace_to_projective_uv(vec4 position) {\n  // outline_vPosition = mat4(\n  //   0.5, 0.0, 0.0, 0.0,\n  //   0.0, 0.5, 0.0, 0.0,\n  //   0.0, 0.0, 0.5, 0.0,\n  //   0.5, 0.5, 0.5, 1.0\n  // ) * position;\n  return vec4(position.xyz * 0.5 + position.w * 0.5, position.w);\n}\n`;\n\nconst fs = vs;\n\nexport default {\n  name: 'outline',\n  vs,\n  fs,\n  getUniforms\n};\n"],"file":"utils.js"}