{"version":3,"sources":["../../../src/advanced-text-layer/advanced-text-layer.js"],"names":["CompositeLayer","TextMultiIconLayer","DEFAULT_COLOR","defaultProps","getText","x","text","getPosition","coordinates","getColor","color","getSize","size","getAngle","angle","getTextAnchor","textAnchor","getAlignmentBaseline","alignmentBaseline","getPixelOffset","pixelOffset","fp64","fontTexture","fontInfo","fontSmoothing","AdvancedTextLayer","state","iconAtlas","props","iconMapping","fetch","then","response","json","parseFontInfo","forEach","fontChar","charid","y","width","height","xadvance","xoffset","yoffset","String","fromCharCode","mask","setState","oldProps","changeFlags","dataChanged","updateTriggersChanged","all","transformStringToLetters","data","length","transformedData","map","val","position","xpos","Array","from","letter","index","icon","reduce","prev","curr","sizeScale","getSubLayerProps","id","updateTriggers","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer} from '@deck.gl/core';\nimport TextMultiIconLayer from './text-multi-icon-layer';\n\n/* global fetch */\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n// TODO: support these options...\n// const TEXT_ANCHOR = {\n//   start: 1,\n//   middle: 0,\n//   end: -1\n// };\n// const ALIGNMENT_BASELINE = {\n//   top: 1,\n//   center: 0,\n//   bottom: -1\n// };\n\nconst defaultProps = {\n  getText: x => x.text,\n  getPosition: x => x.coordinates,\n  getColor: x => x.color || DEFAULT_COLOR,\n  getSize: x => x.size || 32,\n  getAngle: x => x.angle || 0,\n  getTextAnchor: x => x.textAnchor || 'middle',\n  getAlignmentBaseline: x => x.alignmentBaseline || 'center',\n  getPixelOffset: x => x.pixelOffset || [0, 0],\n  fp64: false,\n  fontTexture: null,\n  fontInfo: null,\n  fontSmoothing: 0.2\n};\n\nexport default class AdvancedTextLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      iconAtlas: this.props.fontTexture,\n      iconMapping: null\n    };\n\n    // TODO: fetch again if props change\n    fetch(this.props.fontInfo).then(response => {\n      response.json().then(json => this.parseFontInfo(json));\n    });\n  }\n\n  parseFontInfo(json) {\n    const iconMapping = {};\n    json.forEach(fontChar => {\n      const {charid, x, y, width, height, xadvance, xoffset, yoffset} = fontChar;\n      iconMapping[String.fromCharCode(charid)] = {\n        x,\n        y,\n        width,\n        height,\n        mask: true,\n        xadvance,\n        xoffset,\n        yoffset\n      };\n    });\n    this.setState({iconMapping});\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    if (\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all ||\n          changeFlags.updateTriggersChanged.getText ||\n          changeFlags.updateTriggersChanged.getPosition))\n    ) {\n      this.transformStringToLetters();\n    }\n  }\n\n  transformStringToLetters() {\n    const {data, getText, getPosition} = this.props;\n    if (data.length === 0) {\n      return;\n    }\n\n    // TODO: auto-refresh when iconMapping is available\n    const {iconMapping} = this.state;\n    if (!iconMapping) {\n      return;\n    }\n\n    const transformedData = data\n      .map(val => {\n        const text = getText(val);\n        if (!text) {\n          return [];\n        }\n\n        const position = getPosition(val);\n        let xpos = 0;\n        return Array.from(text).map((letter, index) => {\n          const {xadvance, xoffset, yoffset, width, height} = this.state.iconMapping[letter];\n\n          const x = xpos + (width / 2.0 - xoffset);\n          const y = height / 2.0 + yoffset;\n          xpos += xadvance;\n\n          return {icon: letter, position, x, y};\n        });\n      })\n      .reduce((prev, curr) => [...prev, ...curr]);\n\n    this.setState({data: transformedData});\n  }\n\n  renderLayers() {\n    const {data, iconAtlas, iconMapping} = this.state;\n\n    if (!iconMapping || !iconAtlas || !data) {\n      return null;\n    }\n\n    const {\n      getColor,\n      getSize,\n      getAngle,\n      getPixelOffset,\n      fontSmoothing,\n      fp64,\n      sizeScale\n    } = this.props;\n\n    return [\n      new TextMultiIconLayer(\n        this.getSubLayerProps({\n          id: 'adv-text-multi-icon-layer',\n          data,\n          iconAtlas,\n          iconMapping,\n          getColor,\n          getSize,\n          getAngle,\n          getPixelOffset,\n          fontSmoothing,\n          fp64,\n          sizeScale,\n          updateTriggers: {\n            getAngle,\n            getColor,\n            getSize\n          }\n        })\n      )\n    ];\n  }\n}\n\nAdvancedTextLayer.layerName = 'AdvancedTextLayer';\nAdvancedTextLayer.defaultProps = defaultProps;\n"],"file":"advanced-text-layer.js"}