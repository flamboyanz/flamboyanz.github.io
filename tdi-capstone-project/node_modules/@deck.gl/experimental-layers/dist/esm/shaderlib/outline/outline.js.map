{"version":3,"sources":["../../../../src/shaderlib/outline/outline.js"],"names":["INITIAL_STATE","outlineEnabled","outlineRenderShadowmap","outlineShadowmap","getUniforms","uniforms","undefined","outline_uEnabled","outline_uRenderOutlines","outline_uShadowmap","vs","fs","name"],"mappings":"AAAA;AACA,IAAMA,aAAa,GAAG;AACpBC,EAAAA,cAAc,EAAE,KADI;AAEpBC,EAAAA,sBAAsB,EAAE,KAFJ;AAGpBC,EAAAA,gBAAgB,EAAE;AAHE,CAAtB;;AAMA,SAASC,WAAT,GAAiG;AAAA,iFAAfJ,aAAe;AAAA,MAA3EC,cAA2E,QAA3EA,cAA2E;AAAA,MAA3DC,sBAA2D,QAA3DA,sBAA2D;AAAA,MAAnCC,gBAAmC,QAAnCA,gBAAmC;;AAC/F,MAAME,QAAQ,GAAG,EAAjB;;AACA,MAAIJ,cAAc,KAAKK,SAAvB,EAAkC;AAChCD,IAAAA,QAAQ,CAACE,gBAAT,GAA4BN,cAA5B,CADgC,CACY;AAC7C;;AACD,MAAIC,sBAAsB,KAAKI,SAA/B,EAA0C;AACxCD,IAAAA,QAAQ,CAACG,uBAAT,GAAmCN,sBAAnC,CADwC,CACmB;AAC5D;;AACD,MAAIC,gBAAgB,KAAKG,SAAzB,EAAoC;AAClCD,IAAAA,QAAQ,CAACI,kBAAT,GAA8BN,gBAA9B;AACD;;AACD,SAAOE,QAAP;AACD;;AAED,IAAMK,EAAE,kgBAAR;AAqBA,IAAMC,EAAE,4wCAAR;AA+CA,eAAe;AACbC,EAAAA,IAAI,EAAE,SADO;AAEbF,EAAAA,EAAE,EAAFA,EAFa;AAGbC,EAAAA,EAAE,EAAFA,EAHa;AAIbP,EAAAA,WAAW,EAAXA;AAJa,CAAf","sourcesContent":["/* eslint-disable camelcase */\nconst INITIAL_STATE = {\n  outlineEnabled: false,\n  outlineRenderShadowmap: false,\n  outlineShadowmap: null\n};\n\nfunction getUniforms({outlineEnabled, outlineRenderShadowmap, outlineShadowmap} = INITIAL_STATE) {\n  const uniforms = {};\n  if (outlineEnabled !== undefined) {\n    uniforms.outline_uEnabled = outlineEnabled; // ? 1.0 : 0.0;\n  }\n  if (outlineRenderShadowmap !== undefined) {\n    uniforms.outline_uRenderOutlines = outlineRenderShadowmap; // ? 1.0 : 0.0;\n  }\n  if (outlineShadowmap !== undefined) {\n    uniforms.outline_uShadowmap = outlineShadowmap;\n  }\n  return uniforms;\n}\n\nconst vs = `\\\nvarying float outline_vzLevel;\nvarying vec4 outline_vPosition;\n\n// Set the z level for the outline shadowmap rendering\nvoid outline_setZLevel(float zLevel) {\n  outline_vzLevel = zLevel;\n}\n\n// Store an adjusted position for texture2DProj\nvoid outline_setUV(vec4 position) {\n  // mat4(\n  //   0.5, 0.0, 0.0, 0.0,\n  //   0.0, 0.5, 0.0, 0.0,\n  //   0.0, 0.0, 0.5, 0.0,\n  //   0.5, 0.5, 0.5, 1.0\n  // ) * position;\n  outline_vPosition = vec4(position.xyz * 0.5 + position.w * 0.5, position.w);\n}\n`;\n\nconst fs = `\\\nuniform bool outline_uEnabled;\nuniform bool outline_uRenderOutlines;\nuniform sampler2D outline_uShadowmap;\n\nvarying float outline_vzLevel;\n// varying vec2 outline_vUV;\nvarying vec4 outline_vPosition;\n\nconst float OUTLINE_Z_LEVEL_ERROR = 0.01;\n\n// Return a darker color in shadowmap\nvec4 outline_filterShadowColor(vec4 color) {\n  return vec4(outline_vzLevel / 255., outline_vzLevel / 255., outline_vzLevel / 255., 1.);\n}\n\n// Return a darker color if in shadowmap\nvec4 outline_filterDarkenColor(vec4 color) {\n  if (outline_uEnabled) {\n    float maxZLevel;\n    if (outline_vPosition.q > 0.0) {\n      maxZLevel = texture2DProj(outline_uShadowmap, outline_vPosition).r * 255.;\n    } else {\n      discard;\n    }\n    if (maxZLevel < outline_vzLevel + OUTLINE_Z_LEVEL_ERROR) {\n      vec4(color.rgb * 0.5, color.a);\n    } else {\n      discard;\n    }\n  }\n  return color;\n}\n\n// if enabled and rendering outlines - Render depth to shadowmap\n// if enabled and rendering colors - Return a darker color if in shadowmap\n// if disabled, just return color\nvec4 outline_filterColor(vec4 color) {\n  if (outline_uEnabled) {\n    return outline_uRenderOutlines ?\n      outline_filterShadowColor(color) :\n      outline_filterDarkenColor(color);\n  }\n  return color;\n}\n`;\n\nexport default {\n  name: 'outline',\n  vs,\n  fs,\n  getUniforms\n};\n"],"file":"outline.js"}