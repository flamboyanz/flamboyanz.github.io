{"version":3,"sources":["../../../src/advanced-text-layer/advanced-text-layer.js"],"names":["CompositeLayer","TextMultiIconLayer","DEFAULT_COLOR","defaultProps","getText","x","text","getPosition","coordinates","getColor","color","getSize","size","getAngle","angle","getTextAnchor","textAnchor","getAlignmentBaseline","alignmentBaseline","getPixelOffset","pixelOffset","fp64","fontTexture","fontInfo","fontSmoothing","AdvancedTextLayer","initializeState","state","iconAtlas","props","iconMapping","fetch","then","response","json","parseFontInfo","forEach","fontChar","charid","y","width","height","xadvance","xoffset","yoffset","String","fromCharCode","mask","setState","updateState","oldProps","changeFlags","dataChanged","updateTriggersChanged","all","transformStringToLetters","data","length","transformedData","map","val","position","xpos","Array","from","letter","index","icon","reduce","prev","curr","renderLayers","sizeScale","getSubLayerProps","id","updateTriggers","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {CompositeLayer} from '@deck.gl/core';\nimport TextMultiIconLayer from './text-multi-icon-layer';\n\n/* global fetch */\n\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n// TODO: support these options...\n// const TEXT_ANCHOR = {\n//   start: 1,\n//   middle: 0,\n//   end: -1\n// };\n// const ALIGNMENT_BASELINE = {\n//   top: 1,\n//   center: 0,\n//   bottom: -1\n// };\n\nconst defaultProps = {\n  getText: x => x.text,\n  getPosition: x => x.coordinates,\n  getColor: x => x.color || DEFAULT_COLOR,\n  getSize: x => x.size || 32,\n  getAngle: x => x.angle || 0,\n  getTextAnchor: x => x.textAnchor || 'middle',\n  getAlignmentBaseline: x => x.alignmentBaseline || 'center',\n  getPixelOffset: x => x.pixelOffset || [0, 0],\n  fp64: false,\n  fontTexture: null,\n  fontInfo: null,\n  fontSmoothing: 0.2\n};\n\nexport default class AdvancedTextLayer extends CompositeLayer {\n  initializeState() {\n    this.state = {\n      iconAtlas: this.props.fontTexture,\n      iconMapping: null\n    };\n\n    // TODO: fetch again if props change\n    fetch(this.props.fontInfo).then(response => {\n      response.json().then(json => this.parseFontInfo(json));\n    });\n  }\n\n  parseFontInfo(json) {\n    const iconMapping = {};\n    json.forEach(fontChar => {\n      const {charid, x, y, width, height, xadvance, xoffset, yoffset} = fontChar;\n      iconMapping[String.fromCharCode(charid)] = {\n        x,\n        y,\n        width,\n        height,\n        mask: true,\n        xadvance,\n        xoffset,\n        yoffset\n      };\n    });\n    this.setState({iconMapping});\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    if (\n      changeFlags.dataChanged ||\n      (changeFlags.updateTriggersChanged &&\n        (changeFlags.updateTriggersChanged.all ||\n          changeFlags.updateTriggersChanged.getText ||\n          changeFlags.updateTriggersChanged.getPosition))\n    ) {\n      this.transformStringToLetters();\n    }\n  }\n\n  transformStringToLetters() {\n    const {data, getText, getPosition} = this.props;\n    if (data.length === 0) {\n      return;\n    }\n\n    // TODO: auto-refresh when iconMapping is available\n    const {iconMapping} = this.state;\n    if (!iconMapping) {\n      return;\n    }\n\n    const transformedData = data\n      .map(val => {\n        const text = getText(val);\n        if (!text) {\n          return [];\n        }\n\n        const position = getPosition(val);\n        let xpos = 0;\n        return Array.from(text).map((letter, index) => {\n          const {xadvance, xoffset, yoffset, width, height} = this.state.iconMapping[letter];\n\n          const x = xpos + (width / 2.0 - xoffset);\n          const y = height / 2.0 + yoffset;\n          xpos += xadvance;\n\n          return {icon: letter, position, x, y};\n        });\n      })\n      .reduce((prev, curr) => [...prev, ...curr]);\n\n    this.setState({data: transformedData});\n  }\n\n  renderLayers() {\n    const {data, iconAtlas, iconMapping} = this.state;\n\n    if (!iconMapping || !iconAtlas || !data) {\n      return null;\n    }\n\n    const {\n      getColor,\n      getSize,\n      getAngle,\n      getPixelOffset,\n      fontSmoothing,\n      fp64,\n      sizeScale\n    } = this.props;\n\n    return [\n      new TextMultiIconLayer(\n        this.getSubLayerProps({\n          id: 'adv-text-multi-icon-layer',\n          data,\n          iconAtlas,\n          iconMapping,\n          getColor,\n          getSize,\n          getAngle,\n          getPixelOffset,\n          fontSmoothing,\n          fp64,\n          sizeScale,\n          updateTriggers: {\n            getAngle,\n            getColor,\n            getSize\n          }\n        })\n      )\n    ];\n  }\n}\n\nAdvancedTextLayer.layerName = 'AdvancedTextLayer';\nAdvancedTextLayer.defaultProps = defaultProps;\n"],"file":"advanced-text-layer.js"}