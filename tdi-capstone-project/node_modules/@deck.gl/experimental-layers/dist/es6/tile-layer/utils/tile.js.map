{"version":3,"sources":["../../../../src/tile-layer/utils/tile.js"],"names":["Tile","constructor","getTileData","x","y","z","onGetTileDataError","isVisible","_data","_isLoaded","_loader","_loadData","data","Promise","resolve","isLoaded","getTileDataPromise","then","buffers","catch","err","isOverlapped","tile","m","Math","pow","floor"],"mappings":"AAAA,eAAe,MAAMA,IAAN,CAAW;AACxBC,EAAAA,WAAW,OAA6C;AAAA,QAA3CC,WAA2C,QAA3CA,WAA2C;AAAA,QAA9BC,CAA8B,QAA9BA,CAA8B;AAAA,QAA3BC,CAA2B,QAA3BA,CAA2B;AAAA,QAAxBC,CAAwB,QAAxBA,CAAwB;AAAA,QAArBC,kBAAqB,QAArBA,kBAAqB;AACtD,SAAKH,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKE,SAAL,GAAiB,IAAjB;AACA,SAAKL,WAAL,GAAmBA,WAAnB;AACA,SAAKM,KAAL,GAAa,IAAb;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,OAAL,GAAe,KAAKC,SAAL,EAAf;AACA,SAAKL,kBAAL,GAA0BA,kBAA1B;AACD;;AAED,MAAIM,IAAJ,GAAW;AACT,QAAI,KAAKJ,KAAT,EAAgB;AACd,aAAOK,OAAO,CAACC,OAAR,CAAgB,KAAKN,KAArB,CAAP;AACD;;AACD,WAAO,KAAKE,OAAZ;AACD;;AAED,MAAIK,QAAJ,GAAe;AACb,WAAO,KAAKN,SAAZ;AACD;;AAEDE,EAAAA,SAAS,GAAG;AAAA,UACHR,CADG,GACQ,IADR,CACHA,CADG;AAAA,UACAC,CADA,GACQ,IADR,CACAA,CADA;AAAA,UACGC,CADH,GACQ,IADR,CACGA,CADH;;AAEV,QAAI,CAAC,KAAKH,WAAV,EAAuB;AACrB,aAAO,IAAP;AACD;;AACD,UAAMc,kBAAkB,GAAG,KAAKd,WAAL,CAAiB;AAACC,MAAAA,CAAD;AAAIC,MAAAA,CAAJ;AAAOC,MAAAA;AAAP,KAAjB,CAA3B;AACA,WAAOW,kBAAkB,CACtBC,IADI,CACCC,OAAO,IAAI;AACf,WAAKV,KAAL,GAAaU,OAAb;AACA,WAAKT,SAAL,GAAiB,IAAjB;AACA,aAAOS,OAAP;AACD,KALI,EAMJC,KANI,CAMEC,GAAG,IAAI;AACZ,WAAKX,SAAL,GAAiB,IAAjB;AACA,WAAKH,kBAAL,CAAwBc,GAAxB;AACD,KATI,CAAP;AAUD;;AAEDC,EAAAA,YAAY,CAACC,IAAD,EAAO;AAAA,UACVnB,CADU,GACC,IADD,CACVA,CADU;AAAA,UACPC,CADO,GACC,IADD,CACPA,CADO;AAAA,UACJC,CADI,GACC,IADD,CACJA,CADI;AAEjB,UAAMkB,CAAC,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYH,IAAI,CAACjB,CAAL,GAASA,CAArB,CAAV;AACA,WAAOmB,IAAI,CAACE,KAAL,CAAWJ,IAAI,CAACnB,CAAL,GAASoB,CAApB,MAA2BpB,CAA3B,IAAgCqB,IAAI,CAACE,KAAL,CAAWJ,IAAI,CAAClB,CAAL,GAASmB,CAApB,MAA2BnB,CAAlE;AACD;;AA9CuB","sourcesContent":["export default class Tile {\n  constructor({getTileData, x, y, z, onGetTileDataError}) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.isVisible = true;\n    this.getTileData = getTileData;\n    this._data = null;\n    this._isLoaded = false;\n    this._loader = this._loadData();\n    this.onGetTileDataError = onGetTileDataError;\n  }\n\n  get data() {\n    if (this._data) {\n      return Promise.resolve(this._data);\n    }\n    return this._loader;\n  }\n\n  get isLoaded() {\n    return this._isLoaded;\n  }\n\n  _loadData() {\n    const {x, y, z} = this;\n    if (!this.getTileData) {\n      return null;\n    }\n    const getTileDataPromise = this.getTileData({x, y, z});\n    return getTileDataPromise\n      .then(buffers => {\n        this._data = buffers;\n        this._isLoaded = true;\n        return buffers;\n      })\n      .catch(err => {\n        this._isLoaded = true;\n        this.onGetTileDataError(err);\n      });\n  }\n\n  isOverlapped(tile) {\n    const {x, y, z} = this;\n    const m = Math.pow(2, tile.z - z);\n    return Math.floor(tile.x / m) === x && Math.floor(tile.y / m) === y;\n  }\n}\n"],"file":"tile.js"}