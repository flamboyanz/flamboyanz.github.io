{"version":3,"sources":["../../../src/tile-layer/tile-layer.js"],"names":["GeoJsonLayer","CompositeLayer","TileCache","defaultProps","renderSubLayers","props","getTileData","x","y","z","Promise","resolve","onDataLoaded","onGetTileDataError","err","console","error","maxZoom","minZoom","maxCacheSize","TileLayer","initializeState","state","tiles","tileCache","isLoaded","shouldUpdateState","changeFlags","somethingChanged","updateState","oldProps","context","updateTriggersChanged","all","finalize","setState","maxSize","viewportChanged","viewport","getLayerZoomLevel","id","update","currTiles","filter","tile","allCurrTilesLoaded","every","map","data","then","_data","getPickingInfo","info","sourceLayer","Math","floor","zoom","parseInt","renderLayers","visible","geoProps","layerName"],"mappings":"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","sourcesContent":["import {GeoJsonLayer, CompositeLayer} from 'deck.gl';\nimport TileCache from './utils/tile-cache';\n\nconst defaultProps = {\n  renderSubLayers: props => new GeoJsonLayer(props),\n  getTileData: ({x, y, z}) => Promise.resolve(null),\n  onDataLoaded: () => {},\n  // eslint-disable-next-line\n  onGetTileDataError: err => console.error(err),\n  maxZoom: null,\n  minZoom: null,\n  maxCacheSize: null\n};\n\nexport default class TileLayer extends CompositeLayer {\n  initializeState() {\n    const {maxZoom, minZoom, getTileData, onGetTileDataError} = this.props;\n    this.state = {\n      tiles: [],\n      tileCache: new TileCache({getTileData, maxZoom, minZoom, onGetTileDataError}),\n      isLoaded: false\n    };\n  }\n\n  shouldUpdateState({changeFlags}) {\n    return changeFlags.somethingChanged;\n  }\n\n  updateState({props, oldProps, context, changeFlags}) {\n    const {onDataLoaded, onGetTileDataError} = props;\n    if (\n      changeFlags.updateTriggersChanged &&\n      (changeFlags.updateTriggersChanged.all || changeFlags.updateTriggersChanged.getTileData)\n    ) {\n      const {getTileData, maxZoom, minZoom, maxCacheSize} = props;\n      this.state.tileCache.finalize();\n      this.setState({\n        tileCache: new TileCache({\n          getTileData,\n          maxSize: maxCacheSize,\n          maxZoom,\n          minZoom,\n          onGetTileDataError\n        })\n      });\n    }\n    if (changeFlags.viewportChanged) {\n      const {viewport} = context;\n      const z = this.getLayerZoomLevel();\n      if (viewport.id !== 'DEFAULT-INITIAL-VIEWPORT') {\n        this.state.tileCache.update(viewport, tiles => {\n          const currTiles = tiles.filter(tile => tile.z === z);\n          const allCurrTilesLoaded = currTiles.every(tile => tile.isLoaded);\n          this.setState({tiles, isLoaded: allCurrTilesLoaded});\n          if (!allCurrTilesLoaded) {\n            Promise.all(currTiles.map(tile => tile.data)).then(() => {\n              this.setState({isLoaded: true});\n              onDataLoaded(currTiles.filter(tile => tile._data).map(tile => tile._data));\n            });\n          } else {\n            onDataLoaded(currTiles.filter(tile => tile._data).map(tile => tile._data));\n          }\n        });\n      }\n    }\n  }\n\n  getPickingInfo({info, sourceLayer}) {\n    info.sourceLayer = sourceLayer;\n    info.tile = sourceLayer.props.tile;\n    return info;\n  }\n\n  getLayerZoomLevel() {\n    const z = Math.floor(this.context.viewport.zoom);\n    const {maxZoom, minZoom} = this.props;\n    if (maxZoom && parseInt(maxZoom, 10) === maxZoom && z > maxZoom) {\n      return maxZoom;\n    } else if (minZoom && parseInt(minZoom, 10) === minZoom && z < minZoom) {\n      return minZoom;\n    }\n    return z;\n  }\n\n  renderLayers() {\n    // eslint-disable-next-line no-unused-vars\n    const {getTileData, renderSubLayers, visible, ...geoProps} = this.props;\n    const z = this.getLayerZoomLevel();\n    return this.state.tiles.map(tile => {\n      return renderSubLayers({\n        ...geoProps,\n        id: `${this.id}-${tile.x}-${tile.y}-${tile.z}`,\n        data: tile.data,\n        visible: visible && (!this.state.isLoaded || tile.z === z),\n        tile\n      });\n    });\n  }\n}\n\nTileLayer.layerName = 'TileLayer';\nTileLayer.defaultProps = defaultProps;\n"],"file":"tile-layer.js"}