{"version":3,"sources":["../../../src/bezier-curve-layer/bezier-curve-layer.js"],"names":["Layer","GL","Model","Geometry","fp64","fp64LowPart","vs","fs","NUM_SEGMENTS","DEFAULT_COLOR","defaultProps","strokeWidth","type","min","value","getSourcePosition","x","sourcePosition","getTargetPosition","targetPosition","getControlPoint","controlPoint","getColor","BezierCurveLayer","getShaders","modules","initializeState","attributeManager","state","addInstanced","instanceSourcePositions","size","transition","accessor","instanceTargetPositions","instanceControlPoints","instanceColors","UNSIGNED_BYTE","defaultValue","updateAttribute","props","oldProps","changeFlags","invalidateAll","updateState","gl","context","setState","model","_getModel","draw","uniforms","render","Object","assign","positions","i","concat","id","geometry","drawMode","TRIANGLE_STRIP","attributes","Float32Array","isInstanced","shaderCache","setUniforms","numSegments","calculateInstanceSourceTargetPositions64xyLow","attribute","data","forEach","object","layerName"],"mappings":"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","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {Layer} from '@deck.gl/core';\nimport GL from 'luma.gl/constants';\nimport {Model, Geometry, fp64} from 'luma.gl';\nconst {fp64LowPart} = fp64;\n\nimport vs from './bezier-curve-layer-vertex.glsl';\nimport fs from './bezier-curve-layer-fragment.glsl';\n\nconst NUM_SEGMENTS = 40;\nconst DEFAULT_COLOR = [0, 0, 0, 255];\n\nconst defaultProps = {\n  strokeWidth: {type: 'number', min: 0, value: 1},\n  fp64: false,\n  getSourcePosition: {type: 'accessor', value: x => x.sourcePosition},\n  getTargetPosition: {type: 'accessor', value: x => x.targetPosition},\n  getControlPoint: {type: 'accessor', value: x => x.controlPoint},\n  getColor: {type: 'accessor', value: DEFAULT_COLOR}\n};\n\nexport default class BezierCurveLayer extends Layer {\n  getShaders() {\n    return {vs, fs, modules: ['picking']};\n  }\n\n  initializeState() {\n    const {attributeManager} = this.state;\n\n    /* eslint-disable max-len */\n    attributeManager.addInstanced({\n      instanceSourcePositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getSourcePosition'\n      },\n      instanceTargetPositions: {\n        size: 3,\n        transition: true,\n        accessor: 'getTargetPosition'\n      },\n      instanceControlPoints: {\n        size: 3,\n        transition: false,\n        accessor: 'getControlPoint'\n      },\n      instanceColors: {\n        size: 4,\n        type: GL.UNSIGNED_BYTE,\n        transition: true,\n        accessor: 'getColor',\n        defaultValue: [0, 0, 0, 255]\n      }\n    });\n    /* eslint-enable max-len */\n  }\n\n  updateAttribute({props, oldProps, changeFlags}) {\n    if (props.fp64 !== oldProps.fp64) {\n      const {attributeManager} = this.state;\n      attributeManager.invalidateAll();\n    }\n  }\n\n  updateState({props, oldProps, changeFlags}) {\n    super.updateState({props, oldProps, changeFlags});\n\n    if (props.fp64 !== oldProps.fp64) {\n      const {gl} = this.context;\n      this.setState({model: this._getModel(gl)});\n    }\n    this.updateAttribute({props, oldProps, changeFlags});\n  }\n\n  draw({uniforms}) {\n    const {strokeWidth} = this.props;\n\n    this.state.model.render(\n      Object.assign({}, uniforms, {\n        strokeWidth\n      })\n    );\n  }\n\n  _getModel(gl) {\n    /*\n     *  (0, -1)-------------_(1, -1)\n     *       |          _,-\"  |\n     *       o      _,-\"      o\n     *       |  _,-\"          |\n     *   (0, 1)\"-------------(1, 1)\n     */\n    let positions = [];\n    for (let i = 0; i <= NUM_SEGMENTS; i++) {\n      positions = positions.concat([i, -1, 0, i, 1, 0]);\n    }\n\n    const model = new Model(\n      gl,\n      Object.assign({}, this.getShaders(), {\n        id: this.props.id,\n        geometry: new Geometry({\n          drawMode: GL.TRIANGLE_STRIP,\n          attributes: {\n            positions: new Float32Array(positions)\n          }\n        }),\n        isInstanced: true,\n        shaderCache: this.context.shaderCache\n      })\n    );\n    model.setUniforms({numSegments: NUM_SEGMENTS});\n    return model;\n  }\n\n  calculateInstanceSourceTargetPositions64xyLow(attribute) {\n    const {data, getSourcePosition, getTargetPosition} = this.props;\n    const {value, size} = attribute;\n    let i = 0;\n    data.forEach(object => {\n      const sourcePosition = getSourcePosition(object);\n      const targetPosition = getTargetPosition(object);\n      value[i + 0] = fp64LowPart(sourcePosition[0]);\n      value[i + 1] = fp64LowPart(sourcePosition[1]);\n      value[i + 2] = fp64LowPart(targetPosition[0]);\n      value[i + 3] = fp64LowPart(targetPosition[1]);\n      i += size;\n    });\n  }\n}\n\nBezierCurveLayer.layerName = 'BezierCurveLayer';\nBezierCurveLayer.defaultProps = defaultProps;\n"],"file":"bezier-curve-layer.js"}